from uflacs.geometry.cellcodegen import CellGeometryCG

class IntervalGeometryCG(CellGeometryCG):
    def __init__(self, restriction=''):
        CellGeometryCG.__init__(self, 'interval', 1, 1, restriction)

    def J_code(self):
        code = """
        const double %(J)s[%(gdim)s*%(gdim)s] = { %(coords)s[1][0] - %(coords)s[0][0] };
        """ % self.vars
        return code

    def detJ_code(self):
        code = """
        const double %(detJ)s = %(J)s[0];
        """ % self.vars
        return code

    def Jinv_code(self):
        code = """
        const double %(Jinv)s[1] = { 1.0 / %(J)s[0] };
        """ % self.vars
        return code

    def x_from_xi_code(self):
        return 'double %(x)s[1] = { %(J)s[0]*%(xi)s[0] + %(v0)s[0] };' % self.vars

    def xi_from_x_code(self):
        return 'double %(xi)s[1] = { %(Jinv)s[0]*(%(x)s[0] - %(v0)s[0]) };' % self.vars
