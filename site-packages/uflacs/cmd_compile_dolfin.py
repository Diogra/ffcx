
import os
from uflacs.utils.log import info, warning
from uflacs.utils.files import write_file

def add_compile_dolfin_options(opts):
    "Args: list of .ufl file(s)."
    pass

def run_compile_dolfin(options, args):
    "Compile expressions from .ufl file(s) into dolfin C++ Expressions."
    from ufl.algorithms import load_ufl_file
    from uflacs.backends.dolfin.compiler import compile_dolfin_expressions_header

    # Generate code for each ufl file
    for filename in args:
        info("Loading file '%s'..." % (filename,))

        prefix, ext = os.path.splitext(os.path.basename(filename))
        if ext != '.ufl':
            warning("Expecting ufl file, got %s." % ext)
        output_filename = prefix + '.h'

        data = load_ufl_file(filename)

        code = compile_dolfin_expressions_header(data, prefix)

        write_file(output_filename, code)

    return 0
