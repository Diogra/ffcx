
import os
from uflacs.utils.log import info, warning

def add_latex_options(opts):
    "Args: list of .ufl file(s)."
    pass # TODO: Output filename argument

def write_file(input_filename, output_filename, code):
    f = open(output_filename, 'w')
    f.write(code)
    f.close()

def run_latex(options, args):
    "Compile forms and expressions from .ufl file(s) into LaTeX expressions."
    from ufl.algorithms import load_ufl_file
    #from uflacs.codeutils.latex_compiler import compile_latex_document

    # Generate code for each ufl file
    for filename in args:
        info("Loading file '%s'..." % (filename,))

        prefix, ext = os.path.splitext(os.path.basename(filename))
        if ext != '.ufl':
            warning("Expecting ufl file, got %s." % ext)
        output_filename = prefix + '.tex'

        data = load_ufl_file(filename)

        code = compile_latex_document(data)

        write_file(filename, output_filename, code)

    return 0

# TODO: Move all these to latex compiler file
latex_document_header = r"""
\documentclass[a4paper]{article}
\usepackage{amsmath}
\title{\LaTeX code generated by uflacs}
\begin{document}
"""

latex_document_footer = r"""
\end{document}
"""

def compile_element(element):
    return r"\text{TODO: format as LaTeX code: %s}" % str(element)

def compile_expression(expr):
    return r"\text{TODO: format as LaTeX code: %s}" % str(expr)

def compile_latex_document(data):
    from uflacs.codeutils.format_code import format_code
    from uflacs.codeutils.latex_compiler import compile_form
    code = [[latex_document_header]]
    if data.elements:
        code += [[r'\section{Elements}', r'\begin{align}'],
                 [compile_element(element) for element in data.elements],
                 [r'\end{align}']]
    if data.expressions:
        code += [[r'\section{Expressions}', r'\begin{align}'],
                 [compile_expression(expr) for expr in data.expressions],
                 [r'\end{align}']]
    if data.forms:
        code += [[r'\section{Forms}', r'\begin{align}'],
                 [compile_form(form) for form in data.forms],
                 [r'\end{align}']]
    code += [[latex_document_footer]]
    return format_code(code)
