elements = ["Lagrange","Discontinuous Lagrange", "Crouzeix-Raviart", "Raviart-Thomas",\
            "Brezzi-Douglas-Marini", "Nedelec"]

shape = ["triangle", "tetrahedron"]

elem1 = FiniteElement(elements[0], shape[0], 1)
elem2 = VectorElement(elements[0], shape[0], 1)
elem3 = FiniteElement(elements[4], shape[0], 1)

#elem3 = elem2
element = elem2# + elem3 + elem2

v = TestFunction(element)
u = TrialFunction(element)

#v2 = TestFunction(elem2)
#u2 = TrialFunction(elem2)

f = Function(element)


#print v
#print u
#a = v*u*dx

#a = dot(v,u)*dx# + v*u*dx
a = dot(grad(v), grad(u))*dx
#a = dot(grad(grad(v)),grad(grad(u)))*dx
#a = dot(div(grad(v)),div(grad(u)))*dx
#a = v*u*dx
#a = dot(grad(v('+')),grad(u('-')))*dS
#a = v*u*dx + dot(grad(v),grad(u))*dx
#a = v*u*dx + dot(grad(v),grad(u))*dx# + dot(grad(v('+')),grad(u('-')))*dS
#L = dot(v,f)*ds
