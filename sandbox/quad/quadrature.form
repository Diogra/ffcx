elements = ["Lagrange","Discontinuous Lagrange", "Crouzeix-Raviart", "Raviart-Thomas",\
            "Brezzi-Douglas-Marini", "Nedelec"]

shape = ["triangle", "tetrahedron"]

elem1 = FiniteElement(elements[1], shape[0], 1)
elem2 = VectorElement(elements[0], shape[0], 1)
elem3 = FiniteElement(elements[4], shape[0], 1)

element = elem1# + elem2# + elem2

v = TestFunction(element)
u = TrialFunction(element)
n = FacetNormal("triangle")
h = MeshSize("triangle")
w = Function(element)

#a = w*dot(v,u)*dx
#a = w*dot(grad(v),grad(u))*dx

a = dot(grad(v),grad(u))*dx


#a = dot(grad(v),grad(u))*dx + 0.1*dot(grad(v),grad(u))*dx

#L = dot(v,w)*dx
#a = dot(w,w)*dx
