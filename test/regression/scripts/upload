#!/bin/bash
#
# Copyright (C) 2013 Anders Logg
#
# This file is part of FFC.
#
# FFC is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# FFC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with FFC. If not, see <http://www.gnu.org/licenses/>.
#
# Modified by Martin Sandve Alnaes, 2013-08-20
#
# First added:  2013-04-22
# Last changed: 2013-08-20
#
# This script overwrites the reference data with the current output
# and stores the new reference data as part of the FFC reference data
# repository.

# Parameters
source ./scripts/parameters

# Check that we have any data
if [ ! -d $OUTPUT_DIR ]; then
    echo "Can't find data directory '$OUTPUT_DIR'."
    exit 1
fi

# Get current id for main repo (does not include dirty files!)
REPO_ID=`git rev-list --max-count 1 HEAD`

# Get reference repository
if [ ! -d $DATA_DIR ]; then
    echo "Cloning reference data repository"
    git clone $DATA_REPO
else
    echo "Found existing reference data repository, pulling new data"
    (cd $DATA_DIR && git checkout master && git pull)
    # FIXME: What if there is a merge happening here?
fi

# Check that we had success with getting reference repository
if [ ! -d $DATA_DIR ]; then
    echo "Can't clone reference data directory '$DATA_DIR'."
    exit 1
fi

# Copy references
echo "Copying new reference data to $DATA_DIR"
rsync -r  --exclude='README.rst' --exclude='*.bin' --exclude='*.cpp' $OUTPUT_DIR/ $DATA_DIR
echo ""

# Commit and push data repository
cd $DATA_DIR
git add *
git commit -m "Update reference data, current project head is ${REPO_ID}." | grep -v "create mode"
DATA_ID=`git rev-list --max-count 1 HEAD`
git push
cd ..

# Commit data id
echo $DATA_ID > $DATA_ID_FILE
git commit $DATA_ID_FILE -m"Update reference data pointer to ${DATA_ID}."

