#!/bin/bash
#
# Copyright (C) 2013 Anders Logg
#
# This file is part of FFC.
#
# FFC is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# FFC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with FFC. If not, see <http://www.gnu.org/licenses/>.
#
# First added:  2013-04-22
# Last changed: 2013-04-30
#
# This script overwrites the reference data with the current output
# and stores the new reference data as part of the FFC reference data
# repository.

# Parameters
LOG_FILE="ffc-reference-data.log"
OUTPUT_DIR="output"
DATA_REPO="ssh://git@bitbucket.org/fenics-project/ffc-reference-data.git"
DATA_DIR="ffc-reference-data"

# Check that we have any data
if [ ! -d $OUTPUT_DIR ]; then
    echo "Can't find data directory '$OUTPUT_DIR'."
    exit 1
fi

# Get latest tag and number
LATEST_TAG=`git describe --tags --match ffc-reference-data-* | cut -d'-' -f1-4`
LATEST_NUM=`echo $LATEST_TAG | cut -d'-' -f4`
echo "Latest reference data is $LATEST_TAG"

# Compute new tag
NEW_TAG=ffc-reference-data-`echo $LATEST_NUM | awk '{print $1 + 1}'`
echo "New reference data is $NEW_TAG"

# Get reference repository
if [ ! -d $DATA_DIR ]; then
    echo "Cloning reference data repository"
    git clone $DATA_REPO
else
    echo "Found existing reference data repository, pulling new data"
    (cd $DATA_DIR && git pull)
fi

# Copy references
DEST=$DATA_DIR/$NEW_TAG
echo "Copying new reference data to $DEST"
mkdir -p $DEST
rsync -r  --exclude='*.bin' --exclude='*.cpp' $OUTPUT_DIR/ $DEST/
echo ""

# Store to logfile
unset LANG
echo "$NEW_TAG "`date` >> $LOG_FILE

# Tag and commit in source repository
git tag $NEW_TAG
git add $LOG_FILE
git commit -m "Update reference data: $NEW_TAG"
git push
git push --tags

# Tag and commit in data repository
cd $DATA_DIR
git tag $NEW_TAG
git add $NEW_TAG
git commit -m "Update reference data: $NEW_TAG" | grep -v "create mode"
git push
git push --tags
cd ..

# Make symbolic link to current references
echo ""
echo "Making symbolic link to current reference data:"
echo ""
echo "  $DATA_DIR/current --> $DATA_DIR/$NEW_TAG"
echo ""
(cd $DATA_DIR && ln -sf $NEW_TAG current)
